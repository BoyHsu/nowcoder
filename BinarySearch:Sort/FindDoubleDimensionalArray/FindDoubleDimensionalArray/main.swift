//
//  main.swift
//  FindDoubleDimensionalArray
//
//  Created by 徐恩 on 2023/4/14.
//

import Foundation

public class Solution {
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * @param target int整型
     * @param array int整型二维数组
     * @return bool布尔型
     */
    func Find ( _ target: Int,  _ array: [[Int]]) -> Bool {
        guard !array.isEmpty else { return false }
        var lo = 0, hi = array[0].count
        if hi == 0 {
            return false
        }
        
        for subArr in array {
            while lo < hi {
                let mi = (lo + hi)/2
                let val = subArr[mi]
                if val > target {
                    hi = mi
                } else {
                    lo = mi + 1
                }
            }
            if lo == 0 {
                break
            } else if subArr[lo-1] == target {
                return true
            }
            hi = lo
            lo = 0
        }
        return false
    }
}

let s = Solution()
assert(s.Find(7,[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]]) == true)
assert(s.Find(15,[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]]) == true)
assert(s.Find(11,[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]]) == true)
assert(s.Find(11,[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]]) == true)
assert(s.Find(3,[[1,2,8,9],[2,4,9,12],[4,7,10,13],[6,8,11,15]]) == false)
assert(s.Find(16,[[]]) == false)
assert(s.Find(16,[[2]]) == false)
assert(s.Find(16,[[16]]) == true)

let arr = [
    [0, 1, 3, 4, 5, 7, 8, 11, 13, 15, 18, 21, 24, 27, 30, 32, 35, 36, 39, 41, 42, 43, 46, 49, 52, 55, 58, 60, 63, 66, 67, 69, 72, 75, 78, 80, 81, 82, 85, 86],
    [1, 4, 6, 8, 11, 12, 15, 17, 18, 20, 23, 24, 27, 30, 33, 34, 38, 39, 42, 44, 47, 48, 51, 52, 55, 57, 59, 62, 64, 67, 70, 72, 75, 77, 81, 83, 84, 87, 90, 91],
    [4, 7, 8, 11, 14, 16, 18, 20, 21, 24, 27, 29, 32, 35, 36, 39, 40, 42, 44, 46, 49, 52, 54, 56, 58, 60, 61, 64, 67, 70, 73, 76, 78, 81, 84, 87, 89, 91, 93, 96],
    [5, 8, 10, 13, 15, 19, 21, 23, 24, 27, 29, 31, 34, 37, 38, 41, 43, 45, 46, 49, 52, 55, 58, 59, 61, 64, 67, 69, 71, 72, 76, 78, 79, 83, 87, 90, 91, 94, 96, 97],
    [6, 11, 14, 16, 18, 22, 24, 27, 29, 32, 33, 35, 36, 40, 42, 44, 47, 50, 51, 52, 54, 58, 60, 62, 64, 67, 70, 73, 76, 79, 82, 84, 87, 88, 91, 94, 97, 99, 101, 102],
    [9, 13, 16, 19, 21, 23, 25, 29, 31, 35, 38, 39, 42, 45, 48, 51, 54, 56, 57, 60, 63, 64, 67, 69, 72, 73, 74, 76, 79, 81, 85, 88, 90, 92, 95, 98, 100, 101, 104, 106],
    [10, 16, 19, 22, 24, 26, 29, 31, 34, 36, 39, 40, 43, 46, 49, 52, 55, 57, 58, 61, 63, 64, 68, 70, 72, 74, 75, 77, 80, 82, 86, 89, 91, 93, 96, 99, 101, 102, 105, 107]
    ]
assert(s.Find(22, arr) == true)

print("done")
